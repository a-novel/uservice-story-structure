// Code generated by mockery v2.46.0. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	services "github.com/a-novel/uservice-story-structure/pkg/services"
	mock "github.com/stretchr/testify/mock"
)

// MockBatchDeleteBeats is an autogenerated mock type for the BatchDeleteBeats type
type MockBatchDeleteBeats struct {
	mock.Mock
}

type MockBatchDeleteBeats_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBatchDeleteBeats) EXPECT() *MockBatchDeleteBeats_Expecter {
	return &MockBatchDeleteBeats_Expecter{mock: &_m.Mock}
}

// Exec provides a mock function with given fields: ctx, data
func (_m *MockBatchDeleteBeats) Exec(ctx context.Context, data *services.BatchDeleteBeatsRequest) error {
	ret := _m.Called(ctx, data)

	if len(ret) == 0 {
		panic("no return value specified for Exec")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *services.BatchDeleteBeatsRequest) error); ok {
		r0 = rf(ctx, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockBatchDeleteBeats_Exec_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Exec'
type MockBatchDeleteBeats_Exec_Call struct {
	*mock.Call
}

// Exec is a helper method to define mock.On call
//   - ctx context.Context
//   - data *services.BatchDeleteBeatsRequest
func (_e *MockBatchDeleteBeats_Expecter) Exec(ctx interface{}, data interface{}) *MockBatchDeleteBeats_Exec_Call {
	return &MockBatchDeleteBeats_Exec_Call{Call: _e.mock.On("Exec", ctx, data)}
}

func (_c *MockBatchDeleteBeats_Exec_Call) Run(run func(ctx context.Context, data *services.BatchDeleteBeatsRequest)) *MockBatchDeleteBeats_Exec_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*services.BatchDeleteBeatsRequest))
	})
	return _c
}

func (_c *MockBatchDeleteBeats_Exec_Call) Return(_a0 error) *MockBatchDeleteBeats_Exec_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockBatchDeleteBeats_Exec_Call) RunAndReturn(run func(context.Context, *services.BatchDeleteBeatsRequest) error) *MockBatchDeleteBeats_Exec_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBatchDeleteBeats creates a new instance of MockBatchDeleteBeats. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBatchDeleteBeats(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBatchDeleteBeats {
	mock := &MockBatchDeleteBeats{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
